# Use Dockerized infrastructure
sudo: false
language: python
addons:
  apt:
    packages:
      - net-tools
# Cache our Gcloud SDK between commands
cache:
  directories:
  - "$HOME/google-cloud-sdk/"
env:
# Make sure gcloud command is on our PATH and the App Engine SDK is in the Python path
- PATH=$PATH:${HOME}/google-cloud-sdk/bin PYTHONPATH=${PYTHONPATH}:./lib CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
# If the SDK is not already cached, download it and unpack it
- if [ ! -d ${HOME}/google-cloud-sdk ]; then
     curl https://sdk.cloud.google.com | bash;
  fi
# [START auth]
# Decrypt the credentials we added to the repo using the key we added with the Travis command line tool
- openssl aes-256-cbc -K $encrypted_d80a2d296111_key -iv $encrypted_d80a2d296111_iv -in credentials.tar.gz.enc -out credentials.tar.gz -d
- tar -xzf credentials.tar.gz
- mkdir -p lib
# Here we use the decrypted service account credentials to authenticate the command line tool
- gcloud auth activate-service-account --key-file client-secret.json
# [END auth]
install:
# Set the correct project to deploy to
- gcloud config set project cheney-ci-cd
# Install the Python dependencies
- pip install -r requirements.txt -t lib/
script:
# Run the unit tests
- python test_main.py
# [START deploy]
# Deploy the app
# - gcloud -q app deploy app.yaml --promote
# Run and end to end test
# - python e2e_test.py
# [END deploy]
# To show Public IP Address
- /sbin/ifconfig
# Connect to SSH VM Instance
- ssh barquecontechnologiespvtltd@35.225.60.29
- Barquecon@123
- yes
- cd /var/www/html
- git pull origin master
